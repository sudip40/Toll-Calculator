import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;

class VehicleDetails {
	private String vehicleNo;
	private boolean fastTag;
	private int fastTagBalance;
	private String vehicleType;
	private String vehicleCategory;
	private int tollCharge;
	private boolean returnJurney = false;
	private int cashPayment = 0;
	private int fastTagPayment = 0;
	private int flatFeeForCashPayment = 0;
	private int discount = 0;

	public int getDiscount() {
		return discount;
	}

	public void setDiscount(int discount) {
		this.discount = discount;
	}

	public int getCashPayment() {
		return cashPayment;
	}

	public void setCashPayment(int cashPayment) {
		this.cashPayment = cashPayment;
	}

	public int getFastTagPayment() {
		return fastTagPayment;
	}

	public void setFastTagPayment(int fastTagPayment) {
		this.fastTagPayment = fastTagPayment;
	}

	public int getFlatFeeForCashPayment() {
		return flatFeeForCashPayment;
	}

	public void setFlatFeeForCashPayment(int flatFeeForCashPayment) {
		this.flatFeeForCashPayment = flatFeeForCashPayment;
	}

	public String getVehicleCategory() {
		return vehicleCategory;
	}

	public void setVehicleCategory(String vehicleCategory) {
		this.vehicleCategory = vehicleCategory;
	}

	public int getTollCharge() {
		return tollCharge;
	}

	public void setTollCharge(int tollCharge) {
		this.tollCharge = tollCharge;
	}

	public boolean isReturnJurney() {
		return returnJurney;
	}

	public void setReturnJurney(boolean returnJurney) {
		this.returnJurney = returnJurney;
	}

	public String getVehicleNo() {
		return vehicleNo;
	}

	public void setVehicleNo(String vehicleNo) {
		this.vehicleNo = vehicleNo;
	}

	public boolean isFastTag() {
		return fastTag;
	}

	public void setFastTag(boolean fastTag) {
		this.fastTag = fastTag;
	}

	public int getFastTagBalance() {
		return fastTagBalance;
	}

	public void setFastTagBalance(int fastTagBalance) {
		this.fastTagBalance = fastTagBalance;
	}

	public String getVehicleType() {
		return vehicleType;
	}

	public void setVehicleType(String vehicleType) {
		this.vehicleType = vehicleType;
	}

	public void chargeToll() {
		if (this.returnJurney == false) {
			if (this.fastTagBalance >= this.tollCharge) {
				this.fastTagBalance = this.fastTagBalance - this.tollCharge;
				this.fastTagPayment = this.fastTagPayment + this.tollCharge;
			} else {
				this.cashPayment = this.cashPayment + this.tollCharge - this.fastTagBalance;
				this.fastTagPayment = this.fastTagPayment + this.fastTagBalance;
				this.flatFeeForCashPayment = this.flatFeeForCashPayment + 40;
				this.fastTagBalance = 0;
			}
			this.returnJurney = true;
		} else {
			int tollcharge = this.tollCharge / 2;
			if (this.fastTagBalance >= tollcharge) {
				this.fastTagBalance = this.fastTagBalance - tollcharge;
				this.fastTagPayment = this.fastTagPayment + tollcharge;
			} else {
				this.cashPayment = this.cashPayment + tollcharge - this.fastTagBalance;
				this.fastTagPayment = this.fastTagPayment + this.fastTagBalance;
				this.flatFeeForCashPayment = this.flatFeeForCashPayment + 40;
				this.fastTagBalance = 0;
			}
			this.discount = this.discount + tollcharge;
			this.returnJurney = false;
		}
	}

	@Override
	public String toString() {
		return "VehicleDetails [vehicleNo=" + vehicleNo + ", fastTag=" + fastTag + ", fastTagBalance=" + fastTagBalance
				+ ", vehicleType=" + vehicleType + ", vehicleCategory=" + vehicleCategory + ", tollCharge=" + tollCharge
				+ ", returnJurney=" + returnJurney + ", cashPayment=" + cashPayment + ", fastTagPayment="
				+ fastTagPayment + ", flatFeeForCashPayment=" + flatFeeForCashPayment + ", discount=" + discount + "]";
	}

	public VehicleDetails(String vehicleNo, boolean fastTag, int fastTagBalance) {
		super();
		this.vehicleNo = vehicleNo;
		this.fastTag = fastTag;
		this.fastTagBalance = fastTagBalance;
		char c = vehicleNo.charAt(0);
		if (c == 'T') {
			this.vehicleType = "TRUCK";
			this.tollCharge = 200;
			this.vehicleCategory = "Heavy Vehicle";
		} else if (c == 'B') {
			this.vehicleType = "BUS";
			this.tollCharge = 200;
			this.vehicleCategory = "Heavy Vehicle";
		} else if (c == 'V') {
			this.vehicleType = "VAN";
			this.tollCharge = 100;
			this.vehicleCategory = "Light Vehicle";
		} else if (c == 'C') {
			this.vehicleType = "CAR";
			this.tollCharge = 100;
			this.vehicleCategory = "Light Vehicle";
		} else if (c == 'R') {
			this.vehicleType = "RICKSHAW";
			this.tollCharge = 100;
			this.vehicleCategory = "Light Vehicle";
		} else if (c == 'S') {
			this.vehicleType = "SCOOTER";
			this.tollCharge = 50;
			this.vehicleCategory = "Two Wheeler";
		} else if (c == 'M') {
			this.vehicleType = "MOTORCYCLE";
			this.tollCharge = 50;
			this.vehicleCategory = "Two Wheeler";
		}
	}

}

public class Geektrust {
	public static void main(String[] args) {
		int cashTotal = 0;
		int fastTagTotal = 0;
		int totalFlatFee = 0;
		int totalDiscount = 0;
		try {
			List<VehicleDetails> vehicleDetails = new ArrayList<>();
			HashMap<String, Integer> vehicleCount = new HashMap<>();
			FileInputStream fis = new FileInputStream("sample_input/input2.txt");
			Scanner sc = new Scanner(fis);
			while (sc.hasNextLine()) {
				String inputCommand = sc.nextLine();
//				System.out.println(inputCommand);
//				String output = "";
//				System.out.println(output);
				if (inputCommand.equals("PRINT_COLLECTION")) {

				} else {
					String[] str = inputCommand.split(" ");
					if (str[0].equals("FASTAG")) {
						vehicleDetails.add(new VehicleDetails(str[1], true, Integer.parseInt(str[2])));
					}

					else if (str[0].equals("COLLECT_TOLL")) {
						for (VehicleDetails v : vehicleDetails) {
							if (v.getVehicleNo().equals(str[2])) {
								v.chargeToll();
								if (vehicleCount.containsKey(v.getVehicleType())) {
									vehicleCount.put(v.getVehicleType(), vehicleCount.get(v.getVehicleType()) + 1);
								} else {
									vehicleCount.put(v.getVehicleType(), 1);
								}
							}
						}
					}
				}
			}
			for (VehicleDetails v : vehicleDetails) {
				cashTotal = cashTotal + v.getCashPayment();
				fastTagTotal = fastTagTotal + v.getFastTagPayment();
				totalFlatFee = totalFlatFee + v.getFlatFeeForCashPayment();
				totalDiscount = totalDiscount + v.getDiscount();
			}
			int cash = cashTotal + totalFlatFee;
			int totalAmountCollected = cashTotal + fastTagTotal + totalFlatFee;
			System.out.println("TOTAL_COLLECTION " + totalAmountCollected + " " + totalDiscount);
			System.out.println("PAYMENT_SUMMARY " + fastTagTotal + " " + cash);
			System.out.println("VEHICLE_TYPE_SUMMARY");
			for (String s : vehicleCount.keySet()) {
				System.out.println(s + " " + vehicleCount.get(s));
			}
			sc.close();
		} catch (IOException e) {

		}
	}
}
